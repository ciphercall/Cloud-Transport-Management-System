@using Cloud_Transport.Models
@model Cloud_Transport.Models.GL.GL_COSTPMST

@{
    ViewBag.Title = "EditCostPoolHead";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    //var typecosticd = "";var typecostecd="";

    //Int64 accountced = 0, accountcid = 0;


    //Int64 accountcid = Convert.ToInt64(typecosticd);


    List<SelectListItem> listTypecid = new List<SelectListItem>();
    List<SelectListItem> listTypeced = new List<SelectListItem>();

    CnfDbContext db = new CnfDbContext();

    //var accountfindcid = (from n in db.GlAcchartDbSet where n.COMPID == Model.COMPID && n.ACCOUNTCD == accountcid select new { n.ACCOUNTCD, n.ACCOUNTNM }).ToList();
    //foreach (var x in accountfindcid)
    //{
    //    listTypecid.Add(new SelectListItem { Text = x.ACCOUNTNM, Value = Convert.ToString(x.ACCOUNTCD) });


    //}
    //var account = (from n in db.GlAcchartDbSet where n.COMPID == Model.COMPID select new { n.ACCOUNTCD, n.ACCOUNTNM }).ToList();
    //foreach (var x in account)
    //{
    //    if (x.ACCOUNTCD.ToString().Substring(3, 1) == "3" || x.ACCOUNTCD.ToString().Substring(3, 1) == "4")
    //    {
    //        listTypecid.Add(new SelectListItem { Text = x.ACCOUNTNM, Value = Convert.ToString(x.ACCOUNTCD) });
    //    }


    //}

    //var accountfindced = (from n in db.GlAcchartDbSet where n.COMPID == Model.COMPID && n.ACCOUNTCD == accountced select new { n.ACCOUNTCD, n.ACCOUNTNM }).ToList();
    //foreach (var x in accountfindced)
    //{
    //    listTypeced.Add(new SelectListItem { Text = x.ACCOUNTNM, Value = Convert.ToString(x.ACCOUNTCD) });


    //}

    //foreach (var x in account)
    //{
    //    if (x.ACCOUNTCD.ToString().Substring(3, 1) == "3" || x.ACCOUNTCD.ToString().Substring(3, 1) == "4")
    //    {
    //        listTypeced.Add(new SelectListItem { Text = x.ACCOUNTNM, Value = Convert.ToString(x.ACCOUNTCD) });
    //    }
    //}

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    @Html.HiddenFor(model => model.CostMstID)
    @Html.HiddenFor(model => model.COMPID)
    @Html.HiddenFor(model => model.COSTCID)


    <div id="contentHeaderBox">
        <h1>Update Vehicle Type Information</h1>
    </div>
    <br />

    <div class="col-md-12">
        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Type Name", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.COSTCNM, htmlAttributes: new { @class = "form-control",autofocus=true })
                    @*@Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })*@
                </div>
            </div>
           
          

           
            
            @Html.HiddenFor(model => model.USERPC)
            @Html.HiddenFor(model => model.INSTIME)
            @Html.HiddenFor(model => model.INSIPNO)
            @Html.HiddenFor(model => model.INSLTUDE)
            @Html.HiddenFor(model => model.INSUSERID)

            @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-8">
                    <input type="submit" class="btn btn-info" value="Update" name="Command" />
                    <input type="submit" class="btn btn-warning" value="Back to List" name="Command" />
                </div>

            </div>

        </div>
    </div>


    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>

}
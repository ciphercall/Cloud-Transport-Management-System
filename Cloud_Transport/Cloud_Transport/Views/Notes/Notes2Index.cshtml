@using System.Web.UI.WebControls
@using Cloud_Transport.Models
@model Cloud_Transport.Models.PageModel

@{
    ViewBag.Title = "Notes2Index";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();

   CnfDbContext db = new CnfDbContext();
   //permission check
   Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
   Int64 loggedUserID = Convert.ToInt64(HttpContext.Current.Session["loggedUserID"].ToString());


   var permission_Check = from m in db.AslRoleDbSet
                          where m.COMPID == compid && m.USERID == loggedUserID
                              && m.CONTROLLERNAME == "Notes" && m.ACTIONNAME == "Notes2Index"
                          select m;
   var Status = "";
   foreach (var check in permission_Check)
   {
       Status = check.STATUS;
   }

   if (Status == "A")
   {

   }
   else
   {
       Response.Redirect(Url.Action("Index", "Logout"));
   }
    
   
}

@*<link href="~/Content/bootstrap%20datepicker%20css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap%20datepicker%20css/datepicker3.css" rel="stylesheet" />

<script src="~/Scripts/bootstrap-datepicker.js"></script>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.AGlMaster.COMPID, new { id = "txtCompId", @Value = LoggedCompId })
     @Html.HiddenFor(model => model.AGL_accharmst.HEADCD, new { id = "txtheadcd" })
    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Schedule/Notes To The Accounts(II) </h1>
    </div>
    <br />
    <div class="col-md-12">
        <div class="form-group">
            <div class="row">

                <div class="col-md-3">
                    <span>@Html.Label("name", "Head", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.AGL_accharmst.HEADNM, htmlAttributes: new { id = "txtheadnm", @class = "form-control input-sm",autofocus=true })
                    @Html.ValidationMessageFor(model => model.AGL_accharmst.HEADNM, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3">
                    <span>@Html.Label("name", "From", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control input-sm", id = "idFromdate" })

                </div>

                <div class="col-md-3">
                    <span>@Html.Label("name", "To", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control input-sm", id = "idTodate" })

                </div>


                <div class="col-md-1">
                    <span><br /></span>
                    <input id="SubmitId" type="submit" class="btn btn-info" value="Print" name="command" formtarget="_blank" />
                </div>
                <div class="col-md-2"></div>
            </div>
        </div>



    </div>

    <script type="text/javascript">
        $(document).ready(function () {
           
                $("#idFromdate").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
          
                $("#idTodate").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
           
            $('#txtheadnm').autocomplete(
          {
              source: function (request, response) {
                  var compid = $('#txtcompid').val();
                 
                  $.ajax({
                      url: '/Notes/TagSearch',
                      type: 'GET',
                      cache: false,
                      data: { term: request.term},
                      dataType: 'json',
                      success: function (data) {
                          response($.map(data, function (item) {
                              return {
                                  label: item.HEADNM,
                                  value: item.HEADNM,
                                  id: item.HEADCD


                              };
                          }));
                      }
                  });
              },
              @*source: '@Url.Action("TagSearch", "Notes")',*@
              select: function (event, ui) {
                  $('#txtheadnm').val(ui.item.label);
                  $('#txtheadcd').val(ui.item.id);


                  txtOneChanged();

              },
           
              change: $('#txtheadnm').keyup(_.debounce(txtOneChanged, 500))
             

          });
        });

        function txtOneChanged() {
            var changedText = $("#txtheadnm").val();
            var txtBox = document.getElementById('txtheadnm');
            var txtBox1 = document.getElementById('txtheadcd');
            $.getJSON(
                '/Notes/ItemNameChanged', { "ChangedText": changedText },
                function (result) {
                    txtBox.value = result.headname;
                    txtBox1.value = result.headcd;

                    document.getElementById("txtheadnm").focus();
                });
        }
    </script>
    
    
}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/Underscore.js"></script>
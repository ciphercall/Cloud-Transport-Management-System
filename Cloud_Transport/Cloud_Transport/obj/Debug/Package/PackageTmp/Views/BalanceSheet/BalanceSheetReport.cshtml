@using System.Data
@using System.Data.SqlClient
@using Cloud_Transport.DataAccess
@using Cloud_Transport.Models
@using iTextSharp.text
@model Cloud_Transport.Models.PageModel

@{
    Layout = null;

    var LoggedCompId = Model.AGlMaster.COMPID;
    Int64 compid = Convert.ToInt64(LoggedCompId);
    string companyName = "", address = "", contactNo = "";
    CnfDbContext db = new CnfDbContext();
    var SelectCompanyName = from n in db.AslCompanyDbSet

                            where n.COMPID == compid
                            select new { n.COMPNM, n.ADDRESS, n.CONTACTNO };

    foreach (var n in SelectCompanyName)
    {
        companyName = n.COMPNM;
        address = n.ADDRESS;
        contactNo = n.CONTACTNO;
    }
    var compNm = companyName;
    var Address = address;
    var contactno = contactNo;


    // var fromdate = Model.FromDate;
    var todate = Model.ToDate;

    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

    decimal sumdebit = 0, sumcredit = 0, result = 0, totalAsset = 0, totalLiability = 0;
    int q = 1;

}

<!DOCTYPE html>

<html lang="en">
<head>
    <link href="~/Content/reportcss/style.css" rel="stylesheet" />
</head>

<body style=" background-color:#fafafa;">
    <div style="width: 960px; margin: 0px auto; border: 1px solid #d3d3d3; border-radius: 5px; box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); background: none repeat scroll 0 0 white;">
        <table id="mainTable" border="0" width="100%">
            <thead>
                <tr>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="10%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>

                </tr>

                <tr style="background-color: #00689b">
                    <td colspan="12">
                        <h3 style="color: white;padding:4px">@compNm</h3>
                        <p style="color:white;padding-left:4px">@Address<span>  @contactno</span></p>
                    </td>

                    <td colspan="6" style="color: white;padding:8px" align="right">
                        Powered By<br />Alchemy Software
                    </td>

                </tr>
                <tr>
                    <td colspan="12" align="left" style="padding: 4px; font-weight: bold">Balance Sheet</td>
                    <td align="right" colspan="6" style="padding:8px">Print:@currentDateTime.ToString("dd-MM-yy hh:mm tt")</td>
                </tr>

                <tr style="outline: thin solid">
                    @{
                        string d2 = Convert.ToString(todate);
                        DateTime fdate2 = DateTime.Parse(d2);
                        string ffdt2 = fdate2.ToString("dd-MMM-yyyy");
                    }

                    <td colspan="12" style="font-weight: bold;padding:4px">
                        As On : <span style="font-weight:bold">@ffdt2</span>
                    </td>
                </tr>
                <tr style="background-color: #00689b; outline: thin solid">
                    <td colspan="14" style="color: white; padding: 4px; font-size: small" align="center">Head Particulars</td>
                    <td colspan="4" style="color: white; padding: 4px; font-size: small" align="center">Amount</td>
                </tr>
            </thead>

            <tbody>
                @{
                    var debitcdfind = (from n in db.GlMasterDbSet where n.COMPID == compid && n.TRANSDT <= todate select new { n.DEBITCD }).Distinct().ToList();

                    var findaccountname = (from m in db.GlAcchartDbSet where m.COMPID == compid select new { m.ACCOUNTCD, m.ACCOUNTNM }).ToList();

                    string status = "NO";

                    var tabledata = (from a in db.GlMasterDbSet where a.COMPID == compid && a.TRANSDT <= todate select a).ToList();
                    var accountname = "";
                    string subdebit = "";
                    Int64 i = 0, j = 0;
                    decimal subTotalAsset = 0;
                }
                <tr>
                    <td colspan="18" align="left" style="font-weight:bold;padding-left: 4px;font-size: 20px">ASSET</td>
                </tr>


                @{
                    Int64 maxHeadCD_Asset = Convert.ToInt64((from m in db.GlAccharmstDbSet
                                                             where m.COMPID == compid && m.HEADTP == 1
                                                             select m.HEADCD).Max());
                    Int64 minHeadCD_Asset = Convert.ToInt64((from m in db.GlAccharmstDbSet
                                                             where m.COMPID == compid && m.HEADTP == 1
                                                             select m.HEADCD).Min());

                }
                @for (Int64 z = minHeadCD_Asset; z <= maxHeadCD_Asset; z++)
                {
                    Int64 Current_HeadCD = z;
                    var getList = (from m in db.GlAcchartDbSet
                                   where m.COMPID == compid && m.HEADCD == Current_HeadCD && m.HEADTP == 1
                                   select m).ToList();

                    if (getList.Count != 0)
                    {
                        string HeadName = "", headType = "";
                        var getHeadName = (from m in db.GlAccharmstDbSet where m.COMPID == compid && m.HEADCD == Current_HeadCD && m.HEADTP == 1 select new { m.HEADNM, m.HEADTP }).ToList();
                        foreach (var VARIABLE in getHeadName)
                        {
                            HeadName = VARIABLE.HEADNM;
                            break;
                        }


                        string datafind = "";
                        foreach (var item1 in getList)
                        {
                            var debitcdfind1 = (from n in db.GlMasterDbSet where n.COMPID == compid && n.TRANSDT <= todate select new { n.DEBITCD }).Distinct().ToList();
                            foreach (var item in debitcdfind1)
                            {
                                foreach (var x in findaccountname)
                                {
                                    datafind = "NO";
                                    if (x.ACCOUNTCD == item.DEBITCD && x.ACCOUNTCD == item1.ACCOUNTCD)
                                    {
                                        var aa1 = Convert.ToString(item.DEBITCD).Substring(3, 1);
                                        var tt1 = Convert.ToInt64(aa1);
                                        if (tt1 == 1)
                                        {
                                            datafind = "YES";
                                        }
                                        break;
                                    }
                                }
                                if (datafind == "YES")
                                {
                                    break;
                                }
                            }
                            if (datafind == "YES")
                            {
                                break;
                            }
                        }

                        if (datafind == "YES")
                        {
                            <tr>
                                <td align="left" colspan="18" style="padding-left: 20px">
                                    <strong>@HeadName</strong>
                                </td>
                            </tr>
                        }


                        subTotalAsset = 0;
                        foreach (var list in getList)
                        {
                            foreach (var item in debitcdfind)
                            {
                                if (item.DEBITCD == null || item.DEBITCD==0)
                                {
                                    subdebit = "0";
                                }
                                else
                                {
                                    subdebit = item.DEBITCD.ToString().Substring(3, 1);
                                }

                                if (subdebit == "1")
                                {
                                    status = "NO";
                                    foreach (var x in findaccountname)
                                    {
                                        if (x.ACCOUNTCD == item.DEBITCD && x.ACCOUNTCD == list.ACCOUNTCD)
                                        {
                                            accountname = x.ACCOUNTNM;
                                            status = "YES";
                                            break;
                                        }
                                    }
                                    if (status == "YES")
                                    {
                                        if (i == 0)
                                        {
                                            <tr style="outline: thin solid">
                                                <td colspan="14" style="padding-left: 28px">@accountname</td>
                                                @{
                                            sumdebit = 0;
                                            sumcredit = 0;
                                                }

                                                @foreach (var x1 in tabledata)
                                                {
                                                    if (x1.DEBITCD == item.DEBITCD)
                                                    {
                                                        //var aa = Convert.ToString(item.DEBITCD).Substring(3, 1);
                                                        //var tt = Convert.ToInt64(aa);
                                                        sumdebit = Convert.ToDecimal(sumdebit + x1.DEBITAMT);
                                                        sumcredit = Convert.ToDecimal(sumcredit + x1.CREDITAMT);
                                                    }
                                                }
                                                @{
                                                result = sumdebit - sumcredit;
                                                decimal rr = 0;
                                                string resultamt = "";
                                                Int64 st2 = 0;

                                                if (result < 0)
                                                {
                                                    rr = result * (-1);
                                                    st2 = 1;
                                                    string convertamount2 = Convert.ToString(rr);
                                                    resultamt = CommainAmount.AmountwithComma(convertamount2);
                                                }
                                                else
                                                {
                                                    st2 = 0;
                                                    string convertamount2 = Convert.ToString(result);
                                                    resultamt = CommainAmount.AmountwithComma(convertamount2);

                                                }
                                                subTotalAsset = Convert.ToDecimal(subTotalAsset + result);
                                                totalAsset = Convert.ToDecimal(totalAsset + result);
                                                }
                                                @if (st2 == 1)
                                                {
                                                    <td colspan="4" align="right">-@resultamt</td>
                                                }
                                                else
                                                {
                                                    <td colspan="4" align="right">@resultamt</td>
                                                }
                                            </tr>
                                                i = 1;
                                        }
                                        else
                                        {
                                            <tr style="outline: thin solid">
                                                <td colspan="14" style="padding-left: 28px">@accountname</td>
                                                @{
                                            sumdebit = 0;
                                            sumcredit = 0;
                                                }

                                                @foreach (var x1 in tabledata)
                                                {
                                                    if (x1.DEBITCD == item.DEBITCD)
                                                    {
                                                        //var aa = Convert.ToString(item.DEBITCD).Substring(3, 1);
                                                        //var tt = Convert.ToInt64(aa);
                                                        sumdebit = Convert.ToDecimal(sumdebit + x1.DEBITAMT);
                                                        sumcredit = Convert.ToDecimal(sumcredit + x1.CREDITAMT);
                                                    }
                                                }
                                                @{
                                                result = sumdebit - sumcredit;
                                                decimal rr = 0;
                                                string resultamt = "";
                                                Int64 st1 = 0;
                                                if (result < 0)
                                                {
                                                    rr = result * (-1);
                                                    st1 = 1;
                                                    string convertamount2 = Convert.ToString(rr);
                                                    resultamt = CommainAmount.AmountwithComma(convertamount2);
                                                }
                                                else
                                                {
                                                    st1 = 0;
                                                    string convertamount2 = Convert.ToString(result);
                                                    resultamt = CommainAmount.AmountwithComma(convertamount2);
                                                }
                                                subTotalAsset = Convert.ToDecimal(subTotalAsset + result);
                                                totalAsset = Convert.ToDecimal(totalAsset + result);
                                                }

                                                @if (st1 == 1)
                                                {
                                                    <td colspan="4" align="right">-@resultamt</td>
                                                }
                                                else
                                                {
                                                    <td colspan="4" align="right">@resultamt</td>
                                                }
                                            </tr>
                                                i = 0;
                                        }
                                    }
                                }
                            }
                        }
                        if (datafind == "YES")
                        {
                            <tr style=" outline: thin initial">
                                <td colspan="14" align="right" style="font-weight: bold;padding-left: 4px">Sub Total : </td>
                                @{
                            string subtotal = "";
                            if (subTotalAsset >= 0)
                            {
                                string convertsubtotal = Convert.ToString(subTotalAsset);
                                subtotal = CommainAmount.AmountwithComma(convertsubtotal);
                            }
                            else
                            {
                                int aa = Convert.ToString(subTotalAsset).Length;
                                string convertsubtotal = Convert.ToString(subTotalAsset).Substring(1, aa - 1);

                                subtotal = CommainAmount.AmountwithComma(convertsubtotal);
                                subtotal = "-" + subtotal;
                            }
                                }
                                <td colspan="4" style="font-weight: bold" align="right">@subtotal</td>

                            </tr>
                        }
                    }
                }


                @{
                    decimal amt = 0, st = 0;
                    if (totalAsset < 0)
                    {
                        amt = totalAsset * (-1);
                        st = 1;
                    }
                    else
                    {
                        amt = totalAsset;
                        st = 0;
                    }
                    string convertamount = Convert.ToString(amt);

                    string tAsset = CommainAmount.AmountwithComma(convertamount);

                }

                <tr style=" outline: thin solid">
                    <td colspan="14" style="font-weight: bold;padding-left: 20px" align="right">Total ASSET : </td>
                    @if (st == 0)
                    {
                        <td colspan="4" style="font-weight: bold" align="right">@tAsset</td>
                    }
                    else
                    {
                        <td colspan="4" style="font-weight: bold" align="right">-@tAsset</td>
                    }

                </tr>


                <tr>
                    <td><br /></td>
                </tr>
                <tr>
                    <td colspan="18" style="font-weight:bold;padding-left: 4px;font-size: 20px" align="left">LIABILITY</td>
                </tr>



                @{
                    Int64 maxHeadCD_LIABILITY = Convert.ToInt64((from m in db.GlAccharmstDbSet
                                                                 where m.COMPID == compid && m.HEADTP == 2
                                                                 select m.HEADCD).Max());
                    Int64 minHeadCD_LIABILITY = Convert.ToInt64((from m in db.GlAccharmstDbSet
                                                                 where m.COMPID == compid && m.HEADTP == 2
                                                                 select m.HEADCD).Min());


                    DateTime tDate = Convert.ToDateTime(todate);
                    string tdd = tDate.ToString("dd-MMM-yyyy");
                    var Date = tdd;
                    Decimal subLiability = 0;

                }
                @for (Int64 z = minHeadCD_LIABILITY; z <= maxHeadCD_LIABILITY; z++)
                {
                    Int64 Current_HeadCD = z;
                    var getList2 = (from m in db.GlAcchartDbSet
                                    where m.COMPID == compid && m.HEADCD == Current_HeadCD && m.HEADTP == 2
                                    select m).ToList();

                    if (getList2.Count != 0)
                    {
                        string HeadName = "", headType = "";
                        var getHeadName = (from m in db.GlAccharmstDbSet
                                           where m.COMPID == compid && m.HEADCD == Current_HeadCD && m.HEADTP == 2
                                           select new { m.HEADNM, m.HEADTP }).ToList();
                        foreach (var VARIABLE in getHeadName)
                        {
                            HeadName = VARIABLE.HEADNM;
                            break;
                        }

                        string datafind = "";
                        foreach (var list2 in getList2)
                        {
                            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["CnfDbContext"].ToString());
                            string query = string.Format(
                                @"Select DEBITCD, AMOUNT ,B.ACCOUNTNM from
(SELECT DEBITCD, (SUM(CREDITAMT) - SUM(DEBITAMT)) AMOUNT FROM GL_MASTER
WHERE SUBSTRING(CONVERT(CHAR,DEBITCD),4,1) = '2' and COMPID='{0}' and TRANSDT<='{1}'
GROUP BY DEBITCD
UNION
SELECT cast(COMPID as nvarchar)+ '2020001' DEBITCD, (SUM(CREDITAMT) - SUM(DEBITAMT)) AMOUNT FROM GL_MASTER
WHERE SUBSTRING(CONVERT(CHAR,DEBITCD),4,1) IN ('3','4') and COMPID='{0}' and TRANSDT<='{1}'
GROUP BY COMPID)A left outer join GL_ACCHART B on A.DEBITCD=B.ACCOUNTCD and B.COMPID = '{0}'
order by A.DEBITCD",
                                compid, Date);
                            System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand(query, conn);
                            conn.Open();
                            SqlDataAdapter da = new SqlDataAdapter(cmd);
                            DataTable ds = new DataTable();
                            da.Fill(ds);

                            Int64 debitcd = 0;
                            Decimal Amount = 0;

                            foreach (DataRow row in ds.Rows)
                            {
                                debitcd = Convert.ToInt64(row["DEBITCD"].ToString());
                                if (debitcd == list2.ACCOUNTCD)
                                {
                                    datafind = "YES";
                                    break;
                                }
                            }
                            if (datafind == "YES")
                            {
                                <tr>
                                    <td align="left" colspan="18" style="padding-left: 20px">
                                        <strong>@HeadName</strong>
                                    </td>
                                </tr>
                                break;
                            }
                        }

                        subLiability = 0;
                        foreach (var list2 in getList2)
                        {
                            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["CnfDbContext"].ToString());
                            string query = string.Format(
                                @"Select DEBITCD, AMOUNT ,B.ACCOUNTNM from
(SELECT DEBITCD, (SUM(CREDITAMT) - SUM(DEBITAMT)) AMOUNT FROM GL_MASTER
WHERE SUBSTRING(CONVERT(CHAR,DEBITCD),4,1) = '2' and COMPID='{0}' and TRANSDT<='{1}'
GROUP BY DEBITCD
UNION
SELECT cast(COMPID as nvarchar)+ '2020001' DEBITCD, (SUM(CREDITAMT) - SUM(DEBITAMT)) AMOUNT FROM GL_MASTER
WHERE SUBSTRING(CONVERT(CHAR,DEBITCD),4,1) IN ('3','4') and COMPID='{0}' and TRANSDT<='{1}'
GROUP BY COMPID)A left outer join GL_ACCHART B on A.DEBITCD=B.ACCOUNTCD and B.COMPID = '{0}'
order by A.DEBITCD",
                                compid, Date);
                            System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand(query, conn);
                            conn.Open();
                            SqlDataAdapter da = new SqlDataAdapter(cmd);
                            DataTable ds = new DataTable();
                            da.Fill(ds);


                            string AccountName = "", result_amount = "";
                            Int64 debitcd = 0;
                            Decimal Amount = 0;

                            //string companyid = Convert.ToString(compid);
                            //string DebitCD = Convert.ToString(companyid + "2020001"),DebitCDD2="";

                            foreach (DataRow row in ds.Rows)
                            {
                                debitcd = Convert.ToInt64(row["DEBITCD"].ToString());
                                AccountName = row["ACCOUNTNM"].ToString();

                                if (debitcd == list2.ACCOUNTCD)
                                {
                                    Amount = Convert.ToDecimal(row["AMOUNT"].ToString());

                                    if (Amount >= 0)
                                    {
                                        string convertcurrentAmount = Convert.ToString(Amount);
                                        result_amount = CommainAmount.AmountwithComma(convertcurrentAmount);
                                    }
                                    else
                                    {
                                        int aa = Convert.ToString(Amount).Length;
                                        string convertcurrentAmount = Convert.ToString(Amount).Substring(1, aa - 1);
                                        result_amount = CommainAmount.AmountwithComma(convertcurrentAmount);
                                        result_amount = "-" + result_amount;
                                    }


                                    if (q == 1)
                                    {
                                        <tr style="outline: thin solid">
                                            <td colspan="14" style="padding-left: 28px">@AccountName</td>
                                            <td colspan="4" align="right">@result_amount</td>
                                        </tr>
                                        q = 0;
                                    }
                                    else
                                    {
                                        <tr style="outline: thin solid">
                                            <td colspan="14" style="padding-left: 28px">@AccountName</td>
                                            <td colspan="4" align="right">@result_amount</td>
                                        </tr>
                                        q = 1;
                                    }

                                    subLiability = Convert.ToDecimal(subLiability + Amount);
                                    totalLiability = Convert.ToDecimal(totalLiability + Amount);
                                }
                            }



                        }
                        if (datafind == "YES")
                        {
                            <tr style=" outline: thin initial">
                                <td colspan="14" align="right" style="font-weight: bold;padding-left: 4px">Sub Total : </td>
                                @{
                            string subtotal = "";
                            if (subLiability >= 0)
                            {
                                string convertsubtotal = Convert.ToString(subLiability);

                                subtotal = CommainAmount.AmountwithComma(convertsubtotal);
                            }
                            else
                            {
                                int aa = Convert.ToString(subLiability).Length;
                                string convertsubtotal = Convert.ToString(subLiability).Substring(1, aa - 1);

                                subtotal = CommainAmount.AmountwithComma(convertsubtotal);
                                subtotal = "-" + subtotal;
                            }
                                }
                                <td colspan="4" style="font-weight: bold" align="right">@subtotal</td>

                            </tr>
                        }

                    }
                }


                @{
                    decimal amt1 = 0, st4 = 0;
                    string tLiability = "";
                    if (totalLiability < 0)
                    {
                        amt1 = totalLiability * (-1);
                        st4 = 1;
                    }
                    else
                    {
                        amt1 = totalLiability;
                        st4 = 0;
                    }
                    string convertamount1 = Convert.ToString(amt1);
                    if (convertamount1 == "0")
                    {
                        tLiability = "0";
                    }
                    else
                    {
                        tLiability = CommainAmount.AmountwithComma(convertamount1);
                    }

                }

                <tr style=" outline: thin solid">
                    <td colspan="14" style="font-weight: bold;padding-left: 20px" align="right">Total LIABILITY : </td>
                    @if (st4 == 0)
                    {
                        <td colspan="4" style="font-weight: bold" align="right">@tLiability</td>
                    }
                    else
                    {
                        <td colspan="4" style="font-weight: bold" align="right">-@tLiability</td>
                    }
                </tr>

            </tbody>
        </table>
    </div>
</body>
</html>

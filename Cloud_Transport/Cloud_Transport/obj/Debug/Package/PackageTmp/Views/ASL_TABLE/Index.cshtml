@using System.Net.Mime
@using System.Web.UI.WebControls
@using Cloud_Transport.Models
@model Cloud_Transport.Models.PageModel

@{
    ViewBag.Title = "Index";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }
    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUSerStatus"].ToString();
    if (LoggedUserTp == "AslSuperadmin" && LoggedUserStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }
    CnfDbContext db = new CnfDbContext();

    List<SelectListItem> listtableid = new List<SelectListItem>();
    listtableid.Add(new SelectListItem { Text = "CNF_JOB", Value = "CNF_JOB" });
    listtableid.Add(new SelectListItem { Text = "CNF_JOBBILL", Value = "CNF_JOBBILL" });

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
     <div id="contentHeaderBox">
        <h1>Dynamic Report Table</h1>
        </div>
    <br/>
      <div class="col-md-12">
          <div class="form-group">
              <div class="row">
                  <div class="col-md-4">
                      <table class="table" style="margin-bottom:0px">
                          <tr>
                              <td style="width: 15%; border-color: #EEEEEE;">@Html.LabelFor(model => model.AslTable.TABLEID, htmlAttributes: new { @class = "control-label" })</td>
                              <td style="width: 25%; border-color: #EEEEEE; ">
                                  @Html.DropDownListFor(model => model.AslTable.TABLEID, listtableid, "--Select--", htmlAttributes: new { id = "txtTableID", @class = "form-control" })

                              </td>

                          </tr>
                      </table>
                  </div>
                  <div class="col-md-4">
                      <table class="table" style="margin-bottom:0px">
                          <tr>
                              <td style="width: 15%; border-color: #EEEEEE;">@Html.LabelFor(model => model.AslTable.TABLENAME, htmlAttributes: new { @class = "control-label" })</td>
                              <td style="width: 25%; border-color: #EEEEEE; ">
                                  @Html.TextBoxFor(model => model.AslTable.TABLENAME, htmlAttributes: new { id = "txtTableName", @class = "form-control" })

                              </td>

                          </tr>
                      </table>
                  </div>
                  <div class="col-md-2">
                      <table class="table" style="margin-bottom: 0px">

                          <tr>
                              <td style="border-color: #EEEEEE;"></td>
                              <td style="border-color: #EEEEEE; float: right; margin-right: 0px;"><input id="SubmitId" type="submit" class="btn btn-info" value="Submit" name="command" /></td>
                          </tr>

                      </table>
                  </div>
              </div>

              @Html.TextBoxFor(model => model.AslTable.INSLTUDE, new { id = "latlonPos", style = "display: none;" })

              <input id="lat" type="hidden" />
              <input id="lon" type="hidden" />



          </div>

          </div>
      <div class="col-md-12">
          @if (TempData["message"] != null)
          {
              <div class="text-center">
                  <h6 style="color: #BD7F1C">@TempData["message"] </h6>
              </div>
              <br />
          }



          <div class="row">
              @if (TempData["TableID"] != null)
              {
                  @Html.HiddenFor(model => model.AslTable.TABLEID)
                  @Html.HiddenFor(model => model.AslTableField.ID)
                  <div class="row">
                      <div class="col-md-12">

                          <div class="col-md-2"></div>

                          <div class="col-md-4">
                              <span> <b>@Html.Label("name", "Field ID", htmlAttributes: new { @class = "control-label" })</b></span>
                              @Html.TextBoxFor(model => model.AslTableField.FIELDID, new { @class = "form-control input-sm", id = "txtFieldID" })

                          </div>

                          <div class="col-md-4">
                              <span> <b>@Html.Label("name", "Field Name", htmlAttributes: new { @class = "control-label" })</b></span>
                              @Html.TextBoxFor(model => model.AslTableField.FIELDNAME, new { @class = "form-control input-sm", id = "txtFieldName" })

                          </div>


                          @if (TempData["ShowAddButton"] == null)
                          {

                              <div class="col-md-2">

                                  <input type="submit" class="btn btn-info" value="Update" id="btnUpdate" name="command" style="margin-top: 22px; margin-left: 5px" />

                              </div>
                          }

                          else
                          {

                              <div class="col-md-2">

                                  <input type="submit" class="btn btn-info" value="Add" id="btnAdd" name="command" style="margin-top: 22px; margin-left: 5px" />

                              </div>
                          }


                      </div>
                  </div>
              }

          </div>

          <br />
          <div class="row">
              <div class="col-md-1"></div>
              @if (TempData["TableID"] != null)
              {
                  string tableid = Convert.ToString(TempData["TableID"]);
                  var getTableFieldData = (from n in db.AslTableFieldDbSet
                                           where n.TABLEID == tableid
                                           select n).ToList();
                  <div class="col-md-12">
                      <div class="table-responsive">
                          <table class="table table-striped">
                              <tr>
                                  <td>
                                      <h6>Field ID</h6>
                                  </td>
                                  <td><h6>Field Name</h6></td>
                                  <td></td>
                                  <td></td>
                              </tr>

                              @foreach (var item in getTableFieldData)
                              {

                                  <tr>
                                      @Html.HiddenFor(model => item.TABLEID)
                                      @Html.HiddenFor(model => item.ID)
                                      @Html.HiddenFor(moddel => Model.AslTable.TABLENAME)
                                      <td>
                                          @Html.DisplayFor(model => item.FIELDID, new { style = "width:10em;", id = "txtFieldId" })
                                      </td>
                                      <td>
                                          @Html.DisplayFor(model => item.FIELDNAME, new { style = "width:10em;", id = "txtFieldName" })
                                      </td>

                                      <td>
                                          <span>
                                              <a href="@Url.Action("EditTableField", new { id=item.ID,tableid = item.TABLEID, tablename=Model.AslTable.TABLENAME,fieldid=item.FIELDID,fieldname=item.FIELDNAME })" class="btn btn-sm btn-info">
                                                  <span class="glyphicon glyphicon-pencil"></span>
                                              </a>
                                          </span>
                                      </td>
                                      <td>
                                          <span>
                                              <a href="@Url.Action("TableFieldDelete", new { id = item.ID, tableid = item.TABLEID, tablename = Model.AslTable.TABLENAME, fieldid = item.FIELDID, fieldname = item.FIELDNAME })" class="btn btn-sm btn-danger">
                                                  <span class="glyphicon glyphicon-remove"></span>
                                              </a>
                                          </span>
                                      </td>
                                  </tr>

                              }

                          </table>
                      </div>
                  </div>
              }
              else
              {
                  <div class="table-responsive">
                      <table class="table table-striped"></table>
                  </div>
              }
          </div>
          </div>
    
    
    
    
    
    
    @*<div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-info" style="padding:0px;margin-bottom:0px;">
                    <div class="panel-heading text-center">
                        <h4>Dynamic Report Table</h4>
                    </div>
                </div>

                <div class="jumbotron" style="padding-top:20px;padding-bottom:11px">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-4">
                                <table class="table" style="margin-bottom:0px">
                                    <tr>
                                        <td style="width: 15%; border-color: #EEEEEE;">@Html.LabelFor(model => model.AslTable.TABLEID, htmlAttributes: new { @class = "control-label" })</td>
                                        <td style="width: 25%; border-color: #EEEEEE; ">
                                            @Html.DropDownListFor(model => model.AslTable.TABLEID, listtableid, "--Select--", htmlAttributes: new { id = "txtTableID", @class = "form-control" })

                                        </td>

                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-4">
                                <table class="table" style="margin-bottom:0px">
                                    <tr>
                                        <td style="width: 15%; border-color: #EEEEEE;">@Html.LabelFor(model => model.AslTable.TABLENAME, htmlAttributes: new { @class = "control-label" })</td>
                                        <td style="width: 25%; border-color: #EEEEEE; ">
                                            @Html.TextBoxFor(model => model.AslTable.TABLENAME, htmlAttributes: new { id = "txtTableName", @class = "form-control" })

                                        </td>

                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-2">
                                <table class="table" style="margin-bottom: 0px">

                                    <tr>
                                        <td style="border-color: #EEEEEE;"></td>
                                        <td style="border-color: #EEEEEE; float: right; margin-right: 0px;"><input id="SubmitId" type="submit" class="btn btn-info" value="Submit" name="command" /></td>
                                    </tr>

                                </table>
                            </div>
                        </div>

                        @Html.TextBoxFor(model => model.AslTable.INSLTUDE, new { id = "latlonPos", style = "display: none;" })

                        <input id="lat" type="hidden" />
                        <input id="lon" type="hidden" />



                    </div>
                </div>
            </div>
        </div>

        @if (TempData["message"] != null)
        {
            <div class="text-center">
                <h6 style="color: #BD7F1C">@TempData["message"] </h6>
            </div>
            <br />
        }



        <div class="row">
            @if (TempData["TableID"] != null)
            {
                @Html.HiddenFor(model => model.AslTable.TABLEID)
                @Html.HiddenFor(model => model.AslTableField.ID)
                <div class="row">
                    <div class="col-md-12">

                        <div class="col-md-2"></div>

                        <div class="col-md-4">
                            <span> <b>@Html.Label("name", "Field ID", htmlAttributes: new { @class = "control-label" })</b></span>
                            @Html.TextBoxFor(model => model.AslTableField.FIELDID, new { @class = "form-control input-sm", id = "txtFieldID" })

                        </div>

                        <div class="col-md-4">
                            <span> <b>@Html.Label("name", "Field Name", htmlAttributes: new { @class = "control-label" })</b></span>
                            @Html.TextBoxFor(model => model.AslTableField.FIELDNAME, new { @class = "form-control input-sm", id = "txtFieldName" })

                        </div>


                        @if (TempData["ShowAddButton"] == null)
                        {

                            <div class="col-md-2">

                                <input type="submit" class="btn btn-info" value="Update" id="btnUpdate" name="command" style="margin-top: 22px; margin-left: 5px" />

                            </div>
                        }

                        else
                        {

                            <div class="col-md-2">

                                <input type="submit" class="btn btn-info" value="Add" id="btnAdd" name="command" style="margin-top: 22px; margin-left: 5px" />

                            </div>
                        }


                    </div>
                </div>
            }

        </div>

        <br />
        <div class="row">
            <div class="col-md-1"></div>
            @if (TempData["TableID"] != null)
            {
                string tableid = Convert.ToString(TempData["TableID"]);
                var getTableFieldData = (from n in db.AslTableFieldDbSet
                                         where n.TABLEID == tableid
                                         select n).ToList();
                <div class="col-md-12">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <tr>
                                <td>
                                    <h6>Field ID</h6>
                                </td>
                                <td><h6>Field Name</h6></td>
                                <td></td>
                                <td></td>
                            </tr>

                            @foreach (var item in getTableFieldData)
                            {

                                <tr>
                                    @Html.HiddenFor(model => item.TABLEID)
                                    @Html.HiddenFor(model => item.ID)
                                    @Html.HiddenFor(moddel => Model.AslTable.TABLENAME)
                                    <td>
                                        @Html.DisplayFor(model => item.FIELDID, new { style = "width:10em;", id = "txtFieldId" })
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => item.FIELDNAME, new { style = "width:10em;", id = "txtFieldName" })
                                    </td>

                                    <td>
                                        <span>
                                            <a href="@Url.Action("EditTableField", new { id=item.ID,tableid = item.TABLEID, tablename=Model.AslTable.TABLENAME,fieldid=item.FIELDID,fieldname=item.FIELDNAME })" class="btn btn-sm btn-info">
                                                <span class="glyphicon glyphicon-pencil"></span>
                                            </a>
                                        </span>
                                    </td>
                                    <td>
                                        <span>
                                            <a href="@Url.Action("TableFieldDelete", new { id = item.ID, tableid = item.TABLEID, tablename = Model.AslTable.TABLENAME, fieldid = item.FIELDID, fieldname = item.FIELDNAME })" class="btn btn-sm btn-danger">
                                                <span class="glyphicon glyphicon-remove"></span>
                                            </a>
                                        </span>
                                    </td>
                                </tr>

                            }

                        </table>
                    </div>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped"></table>
                </div>
            }
        </div>


    </div>*@

    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>


    <script type="text/javascript">

                @*$(document).ready(function () {
                    $('#txtTableID').autocomplete(
                        {
                            source: '@Url.Action("TagSearch", "ASL_TABLE")',
                            //change: txtOneChanged,

                        });
                });*@

        $('#txtTableID').change(function () {
            var changedText = $("#txtTableID").val();
            var txtBox = document.getElementById('txtTableName');
            $.getJSON(
                '/ASL_TABLE/ItemNameChanged', { "ChangedText": changedText },
                function (result) {
                    txtBox.value = result.tablename;

                    document.getElementById("txtTableName").focus();
                });

        });

    </script>

    <style type="text/css">
        .ui-autocomplete {
            position: absolute;
            cursor: default;
            background: #f0ffff;
        }

        /* workarounds */
        html .ui-autocomplete {
            width: 1px;
        }
        /* without this, the menu expands to 100% in IE6 */
        .ui-menu {
            list-style: none;
            padding: 2px;
            margin: 0;
            display: block;
            float: left;
        }

            .ui-menu .ui-menu {
                margin-top: -3px;
            }

            .ui-menu .ui-menu-item {
                margin: 0;
                padding: 0;
                zoom: 1;
                float: left;
                clear: left;
                width: 100%;
            }

                .ui-menu .ui-menu-item a {
                    text-decoration: none;
                    display: block;
                    padding: .2em .4em;
                    line-height: 1.5;
                    zoom: 1;
                }

                    .ui-menu .ui-menu-item a.ui-state-hover,
                    .ui-menu .ui-menu-item a.ui-state-active {
                        font-weight: normal;
                        margin: -1px;
                    }
    </style>


}


@*<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.9.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@


